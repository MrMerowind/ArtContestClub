@model ArtContestClub.Models.Contest

@{
    ViewData["Title"] = "Details";
}

@{
    if(ViewData["alreadySubmitted"] != null && ViewData["alreadySubmitted"].ToString().Equals("true"))
    {
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <strong>Error!</strong> You can not leave contest after submitting art.
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>

        ViewData["alreadySubmitted"] = "false";
    }

}

@{
    if(ViewData["reportContest"] != null && ViewData["reportContest"].ToString().Equals("true"))
    {
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <strong>Error!</strong> This feature is not implemented yet.
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>

        ViewData["reportContest"] = "false";
    }

}

<div class="container-fluid card bg-dark text-white">
  <div class="card-body">
    <h5 class="card-title">@Html.DisplayFor(model => model.Title)</h5>
    @{
        if(Model.IsNsfw)
        {
                                            <h6 class="card-subtitle mb-2 text-muted">You can post NSFW</h6>
        }
        else
        {
                                            <h6 class="card-subtitle mb-2 text-muted">You can NOT post NSFW</h6>
        }
    }
    <p class="card-text">@Html.DisplayFor(model => model.Description)</p>
    <div class="btn-group" role="group">
            @{
                if(Model.ContestParticipants == null)
                {
                    if(Model.MaxParticipants <= Model.CurrentParticipants || (Model.Deadline != null && Model.Deadline <= DateTime.Now))
                    {
                                                    <a class="btn btn-dark mb-3" role="link" aria-disabled="true">Join contest</a>
                    }
                    else
                    {
                                                    <a class="btn btn-success mb-3" asp-controller="Contests" asp-action="Join" asp-route-id="@Model?.Id">Join contest</a>
                    }
                }
                else
                {
                    var contestParticipantsObject = Model.ContestParticipants
                        .FirstOrDefault(p => p.ContestId == Model.Id && p.ParticipantEmail == User.Identity.Name);
                    if(contestParticipantsObject == null)
                    {
                        if(Model.MaxParticipants <= Model.CurrentParticipants || (Model.Deadline != null && Model.Deadline <= DateTime.Now))
                        {
                                                        <a class="btn btn-dark mb-3" role="link" aria-disabled="true">Join contest</a>
                        }
                        else
                        {
                                                        <a class="btn btn-success mb-3" asp-controller="Contests" asp-action="Join" asp-route-id="@Model?.Id">Join contest</a>
                        }
                    }
                    else
                    {
                                                    <a class="btn btn-outline-warning mb-3" asp-controller="Contests" asp-action="Leave" asp-route-id="@Model?.Id">Leave contest</a>
                                                    <a class="btn btn-success mb-3" asp-controller="Contests" asp-action="SubmitArt" asp-route-id="@Model?.Id">Submit art</a>
                    }
            }
            
            
        }
        <a class="btn btn-danger mb-3" asp-controller="Contests" asp-action="Details" asp-route-id="@Model?.Id" asp-route-reportContest="@Model?.Id">Report</a>
    </div>
    <div class="card-footer">
        Deadline: @Html.DisplayFor(model => model.Deadline) <br />
        Capacity: @Html.DisplayFor(model => model.CurrentParticipants)
        /
        @Html.DisplayFor(model => model.MaxParticipants) <br />
        Skill level: @Html.DisplayFor(model => model.SkillLevel) <br />
        Branch: @Html.DisplayFor(model => model.Branch) <br />
        Owner: <a class="text-white" asp-controller="AboutMe" asp-action="Index" asp-route-username="@Html.DisplayFor(model => model.OwnerEmail)">@Html.DisplayFor(model => model.OwnerEmail)</a>
    </div>
  </div>
</div>




@if (Model != null && Model.ContestSubmissions != null) foreach(var i in Model.ContestSubmissions)
{
    <br />
    <center>
        <div class="card w-75 bg-secondary text-white">
            <div class="card-body">
                <h5 class="card-title text-center">@i.Title</h5>
                <h6 class="card-subtitle text-center">Submitted by <a class="text-white" asp-controller="AboutMe" asp-action="Index" asp-route-username="@i.Username">@i.Username</a></h6>
                <br />
                <center>
                    <img src="@i.ArtLink" class="card-img" style="width: auto; max-height:600px">
                </center>
            </div>
        </div>
    </center>
}
